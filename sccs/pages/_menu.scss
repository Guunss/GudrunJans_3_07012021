//style des composants de la pages des menus
.page_contenu {
  display: flex;
  flex-direction: column;
}

//la photo doit être en dessous du composant .menu (z-index 10)
.photo {
  z-index: 10;
  height: 250px;
  img {
    height: 100%;
    width: 100%;
    object-fit: cover;
  }
}

.menu {
  display: flex;
  flex-direction: column;
  z-index: 100;
  //on remonte le menu pour se placer sur la photo
  margin-top: -30px;
  background-color: $color-fond-card;
  border-top-left-radius: 35px;
  border-top-right-radius: 35px;
  padding-bottom: 75px;
  padding-top: 15px;
  &__entete {
    display: flex;
    justify-content: space-between;
    padding-left: 10px;
    padding-right: 30px;
  }
  &__titre {
    font-family: "Shrikhand", cursive;
    font-size: 25px;
    margin-left: 15px;
  }
  &__liste {
    @media (min-width: 1200px) {
      display: flex;
      justify-content: space-evenly;
    }
  }
  &__partie {
    @media (min-width: 1200px) {
      width: 30%;
    }
  }
  &__btn {
    height: 30px;
    width: 30px;
    padding: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    position: relative;
    background-color: black;

    &:hover::before {
      //au survol on affiche le coeur en dégradé
      opacity: 1;
    }
    //on crée un pseudo élément avec un dégradé de couleur
    &::before {
      @include degrade_bg_texte();
    }
  }

  &__like {
    transition-duration: 0.6s;
    background-color: #f6f6f6;
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
    align-items: center;
    justify-content: center;
    //on mix le coeur noir avec le before (degradé) -> on garde seulement le pixel le plus clair => coeur en degradé
    mix-blend-mode: lighten;
    font-size: 30px;
  }

  &__btn:hover {
    .menu__like {
      &--off {
        //au survol on masque le coeur non vide
        opacity: 0;
      }
    }
  }
  &__sous_titre {
    text-transform: uppercase;
    margin-top: 30px;
    margin-left: 15px;
  }
  &__ligne {
    margin-top: 5px;
    margin-bottom: 10px;
    border-bottom: 3px solid $color-ternary;
    width: 40px;
    margin-left: 15px;
  }
  &__bouton_container {
    display: flex;
    justify-content: center;
  }
  &__bouton {
    @include bouton();
    margin-top: 35px;
    &:hover {
      @include bouton_hover();
    }
  }
}

.plats {
  display: flex;
  flex-direction: column;
  align-items: center;
  overflow: hidden;
}

.plat {
  @include ombre();
  background-color: white;
  width: 90%;
  border-radius: 10px;
  display: flex;
  margin-bottom: 10px;
  overflow: hidden;
  //on souhaite un apparition progressive des éléments du menu => keyframes menuApparition => avec un scaleY
  animation: menuApparition 0.4s ease-in-out;
  transform: scaleX(0);
  //on garde l'état final de l'animation
  animation-fill-mode: forwards;
  &__texte {
    padding: 10px;
    //on cache ce qui dépasse de l'élément : pour cacher le check qd il est translaté de 50 px vers la droite
    overflow: hidden;
  }
  &__titre {
    font-weight: bold;
    padding-bottom: 5px;
    overflow: hidden;
    white-space: nowrap;
    //si pas assez de place alors on souhaite avoir de petits points pour le texte qui dépasse
    text-overflow: ellipsis;
  }
  &__complement {
    font-size: small;
    overflow: hidden;
    white-space: nowrap;
    //si pas assez de place alors on souhaite avoir de petits points pour le texte qui dépasse
    text-overflow: ellipsis;
  }
  &__prix {
    margin-left: auto;
    font-weight: bold;
    margin-top: auto;
    margin-right: 10px;
    margin-bottom: 10px;
  }
  &__validation {
    width: 50px;
    background-color: $color-ternary;
    display: flex;
    align-items: center;
    justify-content: space-evenly;
    i {
      color: $color-ternary;
      background-color: white;
      border-radius: 50%;
      padding: 2px;
      //point de depart de l'animation : le coche est tourné de 180deg
      transform: rotate(180deg);
      //la transition dure 0.6s
      transition-duration: 0.6s;
    }
    // point de départ de l'animation -50px à droite de l'élément contenant (caché)
    margin-right: -50px;
    transition-duration: 0.6s;
  }
  &:hover &__validation {
    margin-right: 0px;
  }
  &:hover i {
    transform: rotate(0);
  }
  //création des styles delai pour animation des plats
  @for $i from 0 to 9 {
    &--delay-#{$i} {
      animation-delay: #{$i/10}s;
    }
  }
}
